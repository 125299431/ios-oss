version: 2

base_job: &base_job
  macos:
    xcode: "9.3.0"
  working_directory: ~/kickstarter
  environment:
    CIRCLE_ARTIFACTS: /tmp
    BUNDLE_PATH: vendor/bundle

jobs:
  build-and-test:
    <<: *base_job
    steps:
      - restore_cache:
          keys:
            - source-cache

      - checkout
      - run:
          name: Make bootstrap
          command: make bootstrap

      - save_cache:
          key: source-cache
          paths:
            - ".git"

      - run:
          name: Install SwiftLint
          command: HOMEBREW_NO_AUTO_UPDATE=1 brew install swiftlint

      - run:
          name: SwiftLint
          command: set -o pipefail && swiftlint lint --strict --reporter json | tee $CIRCLE_ARTIFACTS/swiftlint-report.json

      - store_artifacts:
          path: /tmp/swiftlint-report.json

  # Kickstarter tests
  kickstarter-tests:
    <<: *base_job
    steps:
      - restore_cache:
          keys:
            - source-cache

      - run:
          name: Kickstarter tests
          command: PLATFORM=iOS make test

      - store_artifacts:
          path: /tmp/xcode_raw.log
      - store_artifacts:
          path: /tmp/FailureDiffs

  # Library tests
  library-tests:
    <<: *base_job
    steps:
      - restore_cache:
          keys:
            - source-cache

      - run:
          name: Library tests
          command: PLATFORM=iOS TARGET=Library make test

      - store_artifacts:
          path: /tmp/xcode_raw.log

  # LiveStream tests
  livestream-tests:
    <<: *base_job
    steps:
      - restore_cache:
          keys:
            - source-cache

      - run:
          name: LiveStream tests
          command: SCHEME=LiveStream make test

      - store_artifacts:
          path: /tmp/xcode_raw.log

  # KsApi tests
  ksapi-tests:
    <<: *base_job
    steps:
      - restore_cache:
          keys:
            - source-cache

      - run:
          name: KsApi tests
          command: SCHEME=KsApi make test

      - store_artifacts:
          path: /tmp/xcode_raw.log

  # Hockey
  beta:
    <<: *base_job
    steps:
      - restore_cache:
          keys:
            - source-cache

      - checkout
      - run:
          name: Make bootstrap
          command: make bootstrap

      - restore_cache:
          keys:
          - v1-gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Bundle install
          command: bundle check || bundle install
          environment:
            BUNDLE_JOBS: 4
            BUNDLE_RETRY: 3
      - save_cache:
          key: v1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Increment build number
          command: agvtool new-version -all $(($(date +%s)/100))

      - run:
          name: Build app
          command: bundle exec fastlane beta_gym --verbose

      - run:
          name: Submit binary to Hockey
          command: bundle exec fastlane beta_hockey --verbose

      - store_artifacts:
          path: /tmp/xcode_raw.log

  # iTunes
  itunes:
    <<: *base_job
    steps:
      - restore_cache:
          keys:
            - source-cache

      - checkout
      - run:
          name: Make bootstrap
          command: make bootstrap

      - restore_cache:
          keys:
          - v1-gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Bundle install
          command: bundle check || bundle install
          environment:
            BUNDLE_JOBS: 4
            BUNDLE_RETRY: 3
      - save_cache:
          key: v1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Increment build number
          command: agvtool new-version -all $(($(date +%s)/100))

      - run:
          name: Build app
          command: bundle exec fastlane itunes_gym --verbose

      - run:
          name: Submit binary to iTunes Connect
          command: bundle exec fastlane itunes_deliver --verbose

      - store_artifacts:
          path: /tmp/xcode_raw.log

  # iTunes
  itunes-hockey:
    <<: *base_job
    steps:
      - restore_cache:
          keys:
            - source-cache

      - checkout
      - run:
          name: Make bootstrap
          command: make bootstrap

      - restore_cache:
          keys:
          - v1-gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Bundle install
          command: bundle check || bundle install
          environment:
            BUNDLE_JOBS: 4
            BUNDLE_RETRY: 3
      - save_cache:
          key: v1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Submit binary to iTunes
          command: bundle exec fastlane itunes_hockey --verbose

      - store_artifacts:
          path: /tmp/xcode_raw.log

# Workflows
workflows:
  version: 2
  build:
    jobs:
      - build-and-test
      - kickstarter-tests
      - library-tests
      - livestream-tests
      - ksapi-tests
      - beta:
          filters:
            branches:
              only: beta-dist
          requires:
            - build-and-test
            - kickstarter-tests
            - library-tests
            - livestream-tests
            - ksapi-tests
      - itunes:
          filters:
            branches:
              only: itunes-dist
          requires:
            - build-and-test
            - kickstarter-tests
            - library-tests
            - livestream-tests
            - ksapi-tests
      - itunes-hockey:
          filters:
            branches:
              only: itunes-dist
          requires:
            - itunes

experimental:
  notify:
    branches:
      only:
        - master
        - beta-dist
        - itunes-dist
